package com.main.AOPLogger;

import org.aspectj.lang.JoinPoint;
import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.*;
import org.springframework.stereotype.Component;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.ResponseEntity;
import java.security.Principal;
import java.util.List;
import java.util.Optional;

import com.main.Entity.Booking_Entity;
import com.main.Entity.Info_Entity;
import org.springframework.security.core.Authentication;

@Aspect
@Component
public class AopLogger {
    
    private static final Logger logger = LoggerFactory.getLogger(AopLogger.class);

    // ========== Authentication Controller Pointcuts ==========
    @Pointcut("execution(* com.main.RestController.AuthController.login(..))")
    public void loginPointcut() {}
    
    @Pointcut("execution(* com.main.RestController.AuthController.register(..))")
    public void registerPointcut() {}

   
    // ========== Authentication Advices ==========
    @AfterReturning(pointcut = "loginPointcut()", returning = "result")
    public void afterSuccessfulLogin(Object result) {
        logger.info("Login successful");
    }

    @AfterThrowing(pointcut = "loginPointcut()", throwing = "ex")
    public void afterLoginException(Exception ex) {
        logger.error("Login failed: {}", ex.getMessage());
    }
    
    @AfterReturning(pointcut="registerPointcut()", returning="result")
    public void afterSuccessfullyRegister(Object result) {
        logger.info("Registration successful");
    }
    
    @AfterThrowing(pointcut="registerPointcut()", throwing="ex")
    public void afterRegisterException(Exception ex) {
        logger.error("Registration failed: {}", ex.getMessage());
    }


    
}